IA UTILIZZATA: GEMINI
esperimento : main

---------------------- Inizio del processo ----------------------


----------------------primo step stampo il Contenuto del PDF----------------------  
Si sviluppi un sistema informativo, composto da una base di dati relazionale e da un applicativo  Java dotato di GUI (Swing) che consente di tenere traccia delle attivit√† personali da svolgere ( nel  seguito chiamate semplicemente ‚Äú ToDo ‚Äù ), ispirato al softwar e Trello.   Il software deve consentire all'utente di organizzare e gestire le proprie attivit√† personali in modo  efficiente, utilizzando un'interfaccia intuitiva e flessibile simile a  quella di  Trello   ( https://trello.com/ ) .     L‚Äôutente entra nel sistema speci ficando la propria login e password, che devono essere univoche.   I ToDo sono organizzati in  tre  bacheche (ogni bacheca ha un titolo e una descrizione), che  possono essere create, modificate ed eliminate.  I titoli delle   tre bacheche sono   Universit√†, Lavoro   e   Tempo Libero.   I ToDo all‚Äôinterno di una bacheca sono ordinat i, secondo un ordine modificabile dall‚Äôutente .  L‚Äôutente pu√≤ creare, modificare ed eliminare  ToDo , cos√¨ come pu√≤ spostare un ToDo da una  bacheca   all‚Äôaltra oppure cambiarne la posizione all‚Äôintern o della  bacheca .   Ogni ToD o   ha  un titolo e una data di scadenza , un link ad una URL  correlata all‚Äôattivit√†,  una  descrizione dettagliata   e un‚Äôimmagine.   Tutti questi elementi sono opzionali e possono essere  modificati in qualsiasi momento.     Ogni ToDo pu√≤ cont enere  inoltre  una lista di altri utenti che condividono quel ToDo. In pratica quel  ToDo comparir√† nella bacheca  corrispondente  di ognuno di tali utenti   . Ad esempio, se Pippo,  Pluto e Paperino condividono un ToDo,  ed   esso  si trova  nella bacheca  Tempo Liber o  di Pippo ,  allora esso comparir√† anche nelle bacheche Tempo Libero di  Pluto e Paperino.   Ogni utente pu√≤  leggere chi sono gli altri utenti con i quali il ToDo √® condiviso. L‚Äôautore del ToDo pu√≤ aggiungere o  eliminare condivisioni.    Infine il ToDo ha un col ore di sfondo che viene mostrato  nell‚Äôinterfaccia grafica . L‚Äôutente deve poter  scrivere e modificare ognuna di tali informazioni.   Un ToDo pu√≤ essere settato come completato  oppure come non completato (di default √® non completato).   Il sistema deve poter  for nire   su richiesta dell‚Äôutente, l‚Äôelenco di ToDo in scadenza nella giornata  odierna, oppure quelli in scadenza entro un certo giorno specificato dall‚Äôutente. Il sistema deve  consentire anche la ricerca per nome o per titolo dei ToDo.   Per i ToDo  scaduti , il sistema mostra  il nome del ToDo in rosso, per evidenziare il superamento  della scadenza prevista.     Requisito per gruppi da tre persone.   All‚Äôinterno del ToDo √® possibile mantenere anche una CheckList di attivit√† da eseguire pe r  completare  il ToDo. Ogni attivit√† della CheckList ha un nome e pu√≤ essere segnalato come  completato oppure come non completato (di default √® non completato). Quando tutte le sottoattivit√†  della CheckList sono state completate, allora il ToDo viene automa ticamente settato come  completato.    
 
üìÑ Contenuto PDF estratto!

---------------------- secondo step stampo il Model JSON dell'XMI----------------------  
{
  "classes": [
    {
      "name": "Utente",
      "attributes": [
        {
          "name": "login",
          "type": null
        },
        {
          "name": "password",
          "type": null
        }
      ],
      "methods": []
    },
    {
      "name": "Bacheca",
      "attributes": [
        {
          "name": "descrizione",
          "type": null
        }
      ],
      "methods": []
    },
    {
      "name": "ToDo",
      "attributes": [
        {
          "name": "titolo",
          "type": null
        },
        {
          "name": "dataScadenza",
          "type": null
        },
        {
          "name": "colore",
          "type": null
        },
        {
          "name": "posizione",
          "type": null
        },
        {
          "name": "URL",
          "type": null
        },
        {
          "name": "descrizione",
          "type": null
        },
        {
          "name": "immagine",
          "type": null
        }
      ],
      "methods": []
    },
    {
      "name": "Checklist",
      "attributes": [],
      "methods": []
    },
    {
      "name": "Attivita",
      "attributes": [
        {
          "name": "nome",
          "type": null
        },
        {
          "name": "stato",
          "type": null
        }
      ],
      "methods": []
    }
  ],
  "relations": [
    {
      "from": "Bacheca",
      "to": "TitoloBacheca",
      "type": "association",
      "name": "titolo",
      "multiplicity": "titolo"
    },
    {
      "from": "ToDo",
      "to": "StatoToDo",
      "type": "association",
      "name": "stato",
      "multiplicity": "stato"
    },
    {
      "from": "Utente",
      "to": "Bacheca",
      "type": "association",
      "multiplicity": "1 - 3"
    },
    {
      "from": "TitoloBacheca",
      "to": "Bacheca",
      "type": "association",
      "multiplicity": " - "
    },
    {
      "from": "ToDo",
      "to": "Utente",
      "type": "association",
      "name": "condivisione",
      "multiplicity": "* - *"
    },
    {
      "from": "Bacheca",
      "to": "ToDo",
      "type": "association",
      "multiplicity": " - *"
    },
    {
      "from": "StatoToDo",
      "to": "ToDo",
      "type": "association",
      "multiplicity": " - "
    },
    {
      "from": "ToDo",
      "to": "Checklist",
      "type": "association",
      "multiplicity": "1 - 0..1"
    },
    {
      "from": "Checklist",
      "to": "Attivita",
      "type": "association",
      "multiplicity": " - *"
    },
    {
      "from": "StatoAttivita",
      "to": "Attivita",
      "type": "association",
      "multiplicity": " - "
    }
  ],
  "enumerations": [
    {
      "name": "TitoloBacheca",
      "values": [
        "Universita",
        "Lavoro",
        "Tempo Libero"
      ]
    },
    {
      "name": "StatoToDo",
      "values": [
        "Completato",
        "Non Completato"
      ]
    },
    {
      "name": "StatoAttivita",
      "values": [
        "Completato",
        "Non Completato"
      ]
    }
  ]
}

---------------------- terzo step stampo il risultato della IA----------------------  
```json
{
  "classes": [
    {
      "name": "Utente",
      "attributes": [
        {
          "name": "login",
          "type": "string",
          "isPrimaryKey": true
        },
        {
          "name": "password",
          "type": "string"
        }
      ],
      "methods": []
    },
    {
      "name": "Bacheca",
      "attributes": [
        {
          "name": "idBacheca",
          "type": "int",
          "isPrimaryKey": true
        },
        {
          "name": "titolo",
          "type": "string"
        },
        {
          "name": "descrizione",
          "type": "string"
        }
      ],
      "methods": []
    },
    {
      "name": "ToDo",
      "attributes": [
        {
          "name": "idToDo",
          "type": "int",
          "isPrimaryKey": true
        },
        {
          "name": "titolo",
          "type": "string"
        },
        {
          "name": "dataScadenza",
          "type": "Date"
        },
        {
          "name": "url",
          "type": "string"
        },
        {
          "name": "descrizione",
          "type": "string"
        },
        {
          "name": "immagine",
          "type": "string"
        },
        {
          "name": "coloreSfondo",
          "type": "string"
        },
        {
          "name": "completato",
          "type": "boolean"
        },
        {
          "name": "posizione",
          "type": "int"
        }
      ],
      "methods": []
    },
    {
      "name": "CheckList",
      "attributes": [
        {
          "name": "idCheckList",
          "type": "int",
          "isPrimaryKey": true
        }
      ],
      "methods": []
    },
    {
      "name": "AttivitaCheckList",
      "attributes": [
        {
          "name": "idAttivita",
          "type": "int",
          "isPrimaryKey": true
        },
        {
          "name": "nome",
          "type": "string"
        },
        {
          "name": "completato",
          "type": "boolean"
        }
      ],
      "methods": []
    }
  ],
  "relations": [
    {
      "from": "Utente",
      "to": "Bacheca",
      "type": "association",
      "name": "crea",
      "multiplicity": "1",
      "multiplicityTarget": "*",
      "direction": "unidirectional",
      "role": null,
      "attributes": []
    },
    {
      "from": "Bacheca",
      "to": "ToDo",
      "type": "association",
      "name": "contiene",
      "multiplicity": "1",
      "multiplicityTarget": "*",
      "direction": "unidirectional",
      "role": null,
      "attributes": []
    },
    {
      "from": "ToDo",
      "to": "Utente",
      "type": "association",
      "name": "condivide",
      "multiplicity": "*",
      "multiplicityTarget": "*",
      "direction": "bidirectional",
      "role": null,
      "attributes": []
    },
    {
      "from": "ToDo",
      "to": "CheckList",
      "type": "composition",
      "name": "ha",
      "multiplicity": "1",
      "multiplicityTarget": "1",
      "direction": "unidirectional",
      "role": null,
      "attributes": []
    },
    {
      "from": "CheckList",
      "to": "AttivitaCheckList",
      "type": "association",
      "name": "include",
      "multiplicity": "1",
      "multiplicityTarget": "*",
      "direction": "unidirectional",
      "role": null,
      "attributes": []
    }
  ],
  "enumerations": []
}
```
üß† Risultato IA ottenuto!
JSON pulito da parsare: {
  "classes": [
    {
      "name": "Utente",
      "attributes": [
        {
          "name": "login",
          "type": "string",
          "isPrimaryKey": true
        },
        {
          "name": "password",
          "type": "string"
        }
      ],
      "methods": []
    },
    {
      "name": "Bacheca",
      "attributes": [
        {
          "name": "idBacheca",
          "type": "int",
          "isPrimaryKey": true
        },
        {
          "name": "titolo",
          "type": "string"
        },
        {
          "name": "descrizione",
          "type": "string"
        }
      ],
      "methods": []
    },
    {
      "name": "ToDo",
      "attributes": [
        {
          "name": "idToDo",
          "type": "int",
          "isPrimaryKey": true
        },
        {
          "name": "titolo",
          "type": "string"
        },
        {
          "name": "dataScadenza",
          "type": "Date"
        },
        {
          "name": "url",
          "type": "string"
        },
        {
          "name": "descrizione",
          "type": "string"
        },
        {
          "name": "immagine",
          "type": "string"
        },
        {
          "name": "coloreSfondo",
          "type": "string"
        },
        {
          "name": "completato",
          "type": "boolean"
        },
        {
          "name": "posizione",
          "type": "int"
        }
      ],
      "methods": []
    },
    {
      "name": "CheckList",
      "attributes": [
        {
          "name": "idCheckList",
          "type": "int",
          "isPrimaryKey": true
        }
      ],
      "methods": []
    },
    {
      "name": "AttivitaCheckList",
      "attributes": [
        {
          "name": "idAttivita",
          "type": "int",
          "isPrimaryKey": true
        },
        {
          "name": "nome",
          "type": "string"
        },
        {
          "name": "completato",
          "type": "boolean"
        }
      ],
      "methods": []
    }
  ],
  "relations": [
    {
      "from": "Utente",
      "to": "Bacheca",
      "type": "association",
      "name": "crea",
      "multiplicity": "1",
      "multiplicityTarget": "*",
      "direction": "unidirectional",
      "role": null,
      "attributes": []
    },
    {
      "from": "Bacheca",
      "to": "ToDo",
      "type": "association",
      "name": "contiene",
      "multiplicity": "1",
      "multiplicityTarget": "*",
      "direction": "unidirectional",
      "role": null,
      "attributes": []
    },
    {
      "from": "ToDo",
      "to": "Utente",
      "type": "association",
      "name": "condivide",
      "multiplicity": "*",
      "multiplicityTarget": "*",
      "direction": "bidirectional",
      "role": null,
      "attributes": []
    },
    {
      "from": "ToDo",
      "to": "CheckList",
      "type": "composition",
      "name": "ha",
      "multiplicity": "1",
      "multiplicityTarget": "1",
      "direction": "unidirectional",
      "role": null,
      "attributes": []
    },
    {
      "from": "CheckList",
      "to": "AttivitaCheckList",
      "type": "association",
      "name": "include",
      "multiplicity": "1",
      "multiplicityTarget": "*",
      "direction": "unidirectional",
      "role": null,
      "attributes": []
    }
  ],
  "enumerations": []
}

---------------------- quarto step stampo il Model JSON della IA---------------------- 
{
  "classes": [
    {
      "name": "Utente",
      "attributes": [
        {
          "name": "login",
          "type": "string",
          "isPrimaryKey": true
        },
        {
          "name": "password",
          "type": "string"
        }
      ],
      "methods": []
    },
    {
      "name": "Bacheca",
      "attributes": [
        {
          "name": "idBacheca",
          "type": "int",
          "isPrimaryKey": true
        },
        {
          "name": "titolo",
          "type": "string"
        },
        {
          "name": "descrizione",
          "type": "string"
        }
      ],
      "methods": []
    },
    {
      "name": "ToDo",
      "attributes": [
        {
          "name": "idToDo",
          "type": "int",
          "isPrimaryKey": true
        },
        {
          "name": "titolo",
          "type": "string"
        },
        {
          "name": "dataScadenza",
          "type": "Date"
        },
        {
          "name": "url",
          "type": "string"
        },
        {
          "name": "descrizione",
          "type": "string"
        },
        {
          "name": "immagine",
          "type": "string"
        },
        {
          "name": "coloreSfondo",
          "type": "string"
        },
        {
          "name": "completato",
          "type": "boolean"
        },
        {
          "name": "posizione",
          "type": "int"
        }
      ],
      "methods": []
    },
    {
      "name": "CheckList",
      "attributes": [
        {
          "name": "idCheckList",
          "type": "int",
          "isPrimaryKey": true
        }
      ],
      "methods": []
    },
    {
      "name": "AttivitaCheckList",
      "attributes": [
        {
          "name": "idAttivita",
          "type": "int",
          "isPrimaryKey": true
        },
        {
          "name": "nome",
          "type": "string"
        },
        {
          "name": "completato",
          "type": "boolean"
        }
      ],
      "methods": []
    }
  ],
  "relations": [
    {
      "from": "Utente",
      "to": "Bacheca",
      "type": "association",
      "name": "crea",
      "multiplicity": "1",
      "multiplicityTarget": "*",
      "direction": "unidirectional",
      "role": null,
      "attributes": []
    },
    {
      "from": "Bacheca",
      "to": "ToDo",
      "type": "association",
      "name": "contiene",
      "multiplicity": "1",
      "multiplicityTarget": "*",
      "direction": "unidirectional",
      "role": null,
      "attributes": []
    },
    {
      "from": "ToDo",
      "to": "Utente",
      "type": "association",
      "name": "condivide",
      "multiplicity": "*",
      "multiplicityTarget": "*",
      "direction": "bidirectional",
      "role": null,
      "attributes": []
    },
    {
      "from": "ToDo",
      "to": "CheckList",
      "type": "composition",
      "name": "ha",
      "multiplicity": "1",
      "multiplicityTarget": "1",
      "direction": "unidirectional",
      "role": null,
      "attributes": []
    },
    {
      "from": "CheckList",
      "to": "AttivitaCheckList",
      "type": "association",
      "name": "include",
      "multiplicity": "1",
      "multiplicityTarget": "*",
      "direction": "unidirectional",
      "role": null,
      "attributes": []
    }
  ],
  "enumerations": []
}

---------------------- quinto step stampo il risultato del confronto tra i due modelli----------------------  

Similarit√† totale: 0.908
Dettagli: {"classSimilarity":0.979,"attributeSimilarity":0.583,"methodSimilarity":1,"relationSimilarity":1}
Classi abbinate: [{"from":"Attivita","to":"AttivitaCheckList","similarity":0.89},{"from":"Bacheca","to":"Bacheca","similarity":1},{"from":"Checklist","to":"CheckList","similarity":1},{"from":"ToDo","to":"ToDo","similarity":1},{"from":"Utente","to":"Utente","similarity":1}]

üîç Analizzando le differenze...

---------------------- ANALISI ERRORI E SUGGERIMENTI ----------------------


==================== REPORT ERRORI ====================
Similarit√†: 90.8% - Status: BUONO
Errori attendibili: 2
Errori non attendibili: 14
========================================================

üü° ERRORI MINORI (2):
  1. Nella classe "Attivita" mancano gli attributi: stato
     üí° Suggerimento: Specifica nella traccia: "La classe Attivita deve avere i seguenti attributi: stato"

  2. Nella classe "ToDo" mancano gli attributi: colore
     üí° Suggerimento: Specifica nella traccia: "La classe ToDo deve avere i seguenti attributi: colore"

‚ö†Ô∏è  ERRORI NON ATTENDIBILI (14):
    ‚ÑπÔ∏è  L'IA spesso genera contenuti extra o ha difficolt√† con le associazioni
    ‚ÑπÔ∏è  Questi errori potrebbero essere falsi positivi - verifica manualmente la traccia

  1. Manca la relazione association tra "Bacheca" e "TitoloBacheca"
     üí° Suggerimento: Specifica nella traccia: "Bacheca √® associato a TitoloBacheca"
     ‚ö†Ô∏è  Nota: Verifica manualmente se questo elemento √® realmente problematico

  2. Manca la relazione association tra "ToDo" e "StatoToDo"
     üí° Suggerimento: Specifica nella traccia: "ToDo √® associato a StatoToDo"
     ‚ö†Ô∏è  Nota: Verifica manualmente se questo elemento √® realmente problematico

  3. Manca la relazione association tra "TitoloBacheca" e "Bacheca"
     üí° Suggerimento: Specifica nella traccia: "TitoloBacheca √® associato a Bacheca"
     ‚ö†Ô∏è  Nota: Verifica manualmente se questo elemento √® realmente problematico

  4. Manca la relazione association tra "StatoToDo" e "ToDo"
     üí° Suggerimento: Specifica nella traccia: "StatoToDo √® associato a ToDo"
     ‚ö†Ô∏è  Nota: Verifica manualmente se questo elemento √® realmente problematico

  5. Manca la relazione association tra "ToDo" e "Checklist"
     üí° Suggerimento: Specifica nella traccia: "ToDo √® associato a Checklist"
     ‚ö†Ô∏è  Nota: Verifica manualmente se questo elemento √® realmente problematico

  6. Manca la relazione association tra "Checklist" e "Attivita"
     üí° Suggerimento: Specifica nella traccia: "Checklist √® associato a Attivita"
     ‚ö†Ô∏è  Nota: Verifica manualmente se questo elemento √® realmente problematico

  7. Manca la relazione association tra "StatoAttivita" e "Attivita"
     üí° Suggerimento: Specifica nella traccia: "StatoAttivita √® associato a Attivita"
     ‚ö†Ô∏è  Nota: Verifica manualmente se questo elemento √® realmente problematico

  8. Relazione tra "ToDo" e "Checklist": trovato "composition", atteso "association"
     üí° Suggerimento: Chiarisci nella traccia il tipo di relazione specifica
     ‚ö†Ô∏è  Nota: Verifica manualmente se questo elemento √® realmente problematico

  9. Nella classe "AttivitaCheckList" sono stati generati attributi non richiesti: idAttivita, completato
     üí° Suggerimento: Rimuovi dalla traccia riferimenti a questi attributi se non necessari
     ‚ö†Ô∏è  Nota: Verifica manualmente se questo elemento √® realmente problematico

  10. Nella classe "Bacheca" sono stati generati attributi non richiesti: idBacheca, titolo
     üí° Suggerimento: Rimuovi dalla traccia riferimenti a questi attributi se non necessari
     ‚ö†Ô∏è  Nota: Verifica manualmente se questo elemento √® realmente problematico

  11. Nella classe "CheckList" sono stati generati attributi non richiesti: idCheckList
     üí° Suggerimento: Rimuovi dalla traccia riferimenti a questi attributi se non necessari
     ‚ö†Ô∏è  Nota: Verifica manualmente se questo elemento √® realmente problematico

  12. Nella classe "ToDo" sono stati generati attributi non richiesti: idToDo, coloreSfondo, completato
     üí° Suggerimento: Rimuovi dalla traccia riferimenti a questi attributi se non necessari
     ‚ö†Ô∏è  Nota: Verifica manualmente se questo elemento √® realmente problematico

  13. Generata relazione non richiesta: composition tra "ToDo" e "CheckList"
     üí° Suggerimento: Rimuovi dalla traccia riferimenti ambigui che potrebbero aver causato questa relazione
     ‚ö†Ô∏è  Nota: Verifica manualmente se questo elemento √® realmente problematico

  14. Generata relazione non richiesta: association tra "CheckList" e "AttivitaCheckList"
     üí° Suggerimento: Rimuovi dalla traccia riferimenti ambigui che potrebbero aver causato questa relazione
     ‚ö†Ô∏è  Nota: Verifica manualmente se questo elemento √® realmente problematico

========================================================


---------------------- DIFFERENZE DETTAGLIATE ----------------------

Classi mancanti: []
Classi extra: []
Attributi mancanti: [
  {
    "className": "Attivita",
    "attributes": [
      {
        "name": "stato",
        "type": null
      }
    ]
  },
  {
    "className": "ToDo",
    "attributes": [
      {
        "name": "colore",
        "type": null
      }
    ]
  }
]
Attributi extra: [
  {
    "className": "AttivitaCheckList",
    "attributes": [
      {
        "name": "idAttivita",
        "type": "int",
        "isPrimaryKey": true
      },
      {
        "name": "completato",
        "type": "boolean"
      }
    ]
  },
  {
    "className": "Bacheca",
    "attributes": [
      {
        "name": "idBacheca",
        "type": "int",
        "isPrimaryKey": true
      },
      {
        "name": "titolo",
        "type": "string"
      }
    ]
  },
  {
    "className": "CheckList",
    "attributes": [
      {
        "name": "idCheckList",
        "type": "int",
        "isPrimaryKey": true
      }
    ]
  },
  {
    "className": "ToDo",
    "attributes": [
      {
        "name": "idToDo",
        "type": "int",
        "isPrimaryKey": true
      },
      {
        "name": "coloreSfondo",
        "type": "string"
      },
      {
        "name": "completato",
        "type": "boolean"
      }
    ]
  }
]
Relazioni mancanti: [
  {
    "from": "Bacheca",
    "to": "TitoloBacheca",
    "type": "association",
    "name": "titolo",
    "multiplicity": "titolo"
  },
  {
    "from": "ToDo",
    "to": "StatoToDo",
    "type": "association",
    "name": "stato",
    "multiplicity": "stato"
  },
  {
    "from": "TitoloBacheca",
    "to": "Bacheca",
    "type": "association",
    "multiplicity": " - "
  },
  {
    "from": "StatoToDo",
    "to": "ToDo",
    "type": "association",
    "multiplicity": " - "
  },
  {
    "from": "ToDo",
    "to": "Checklist",
    "type": "association",
    "multiplicity": "1 - 0..1"
  },
  {
    "from": "Checklist",
    "to": "Attivita",
    "type": "association",
    "multiplicity": " - *"
  },
  {
    "from": "StatoAttivita",
    "to": "Attivita",
    "type": "association",
    "multiplicity": " - "
  }
]
Relazioni extra: [
  {
    "from": "ToDo",
    "to": "CheckList",
    "type": "composition",
    "name": "ha",
    "multiplicity": "1",
    "multiplicityTarget": "1",
    "direction": "unidirectional",
    "role": null,
    "attributes": []
  },
  {
    "from": "CheckList",
    "to": "AttivitaCheckList",
    "type": "association",
    "name": "include",
    "multiplicity": "1",
    "multiplicityTarget": "*",
    "direction": "unidirectional",
    "role": null,
    "attributes": []
  }
]
Tipi relazione sbagliati: [
  {
    "expected": {
      "from": "ToDo",
      "to": "Checklist",
      "type": "association",
      "multiplicity": "1 - 0..1"
    },
    "actual": {
      "from": "ToDo",
      "to": "CheckList",
      "type": "composition",
      "name": "ha",
      "multiplicity": "1",
      "multiplicityTarget": "1",
      "direction": "unidirectional",
      "role": null,
      "attributes": []
    }
  }
]

---------------------- GENERAZIONE PLANTUML ----------------------


--- PLANTUML MODELLO ATTESO ---

@startuml
!define RECTANGLE class

class Utente {
  login
  password
}

class Bacheca {
  descrizione
}

class ToDo {
  titolo
  dataScadenza
  colore
  posizione
  URL
  descrizione
  immagine
}

class Checklist {
}

class Attivita {
  nome
  stato
}

enum TitoloBacheca {
  Universita
  Lavoro
  Tempo Libero
}

enum StatoToDo {
  Completato
  Non Completato
}

enum StatoAttivita {
  Completato
  Non Completato
}

Utente "1" --  "3"Bacheca
ToDo "0..*" --  "0..*"Utente : condivisione
Bacheca --  "0..*"ToDo
ToDo "1" --  "0..1"Checklist
Checklist --  "0..*"Attivita


@enduml

--- PLANTUML MODELLO IA ---

@startuml
!define RECTANGLE class

class Utente {
  login : string
  password : string
}

class Bacheca {
  idBacheca : int
  titolo : string
  descrizione : string
}

class ToDo {
  idToDo : int
  titolo : string
  dataScadenza : Date
  url : string
  descrizione : string
  immagine : string
  coloreSfondo : string
  completato : boolean
  posizione : int
}

class CheckList {
  idCheckList : int
}

class AttivitaCheckList {
  idAttivita : int
  nome : string
  completato : boolean
}

Utente -- Bacheca : crea
Bacheca -- ToDo : contiene
ToDo -- Utente : condivide
ToDo *-- CheckList : ha
CheckList -- AttivitaCheckList : include


@enduml
